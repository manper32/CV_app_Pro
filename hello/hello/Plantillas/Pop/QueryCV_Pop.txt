WITH base AS (SELECT DISTINCT o.deudor_id 
			  FROM cbpo_popular.obligaciones_asignacion AS oa 
			  INNER JOIN cbpo_popular.obligaciones AS o 
			  ON o.obligacion_id = oa.obligacion_id
			  WHERE oa.asignacion_id = (SELECT a.asignacion_id 
			  						    FROM cbpo_popular.asignaciones AS a 
			  						    WHERE a.estado IS TRUE)),
consa AS (SELECT DISTINCT m.* 
		  FROM cbpo_popular.mejor_gestion AS m 
		  LEFT JOIN base AS b 
		  ON b.deudor_id = m.deudor_id 
		  WHERE mes = EXTRACT (MONTH FROM current_date )),
consb AS (SELECT DISTINCT m.deudor_id,indicador 
	      FROM cbpo_popular.mejor_gestion AS m 
	      LEFT JOIN base AS b 
	      ON b.deudor_id = m.deudor_id 
	      WHERE mes = EXTRACT (MONTH FROM current_date ) -1),
consc AS (SELECT DISTINCT m.deudor_id,indicador 
          FROM cbpo_popular.mejor_gestion AS m 
          LEFT JOIN base AS b ON b.deudor_id = m.deudor_id 
          WHERE mes = EXTRACT (MONTH FROM current_date ) -2),
consd AS (SELECT DISTINCT m.deudor_id,indicador 
		  FROM cbpo_popular.mejor_gestion AS m 
		  LEFT JOIN base AS b ON b.deudor_id = m.deudor_id 
		  WHERE mes = EXTRACT (MONTH FROM current_date ) -3),
conse AS (SELECT DISTINCT m.deudor_id,indicador 
	      FROM cbpo_popular.mejor_gestion AS m 
	      LEFT JOIN base AS b ON b.deudor_id = m.deudor_id 
	      WHERE mes = EXTRACT (MONTH FROM current_date ) -4),
basemejorgestion AS (SELECT DISTINCT 
							bs.deudor_id,
							a.mes, 
							a.anio, 
							a.indicador, 
							a.repeticion, 
							a.llamadas, 
							a.sms, 
							a.correos, 
							a.gescall, 
					  		a.whatsapp,
					  		a.no_contacto,
					  		CASE WHEN a.llamadas IS NULL THEN 0 ELSE a.llamadas END +
					  		CASE WHEN a.sms IS NULL THEN 0 ELSE a.sms END +
					  		CASE WHEN a.correos IS NULL THEN 0 ELSE a.correos END +
					  		CASE WHEN a.gescall IS NULL THEN  0 ELSE a.gescall END +
					  		CASE WHEN a.whatsapp IS NULL THEN 0 ELSE a.whatsapp END +
					  		CASE WHEN a.no_contacto IS NULL THEN  0 ELSE a.no_contacto END AS total_gestiones, 
					  		a.fecha_gestion, a.visitas, a.phone, a.asesor, a.fecha_primer_gestion, a.fecha_ultima_gestion,
					  a.ultimo_alo,b.indicador AS ind_m1,c.indicador AS ind_m2,d.indicador AS ind_m3,e.indicador AS ind_m4,
					  CASE WHEN i.contactability = 0 THEN 'NO CONTACTO' ELSE 'CONTACTO' END AS contactability, a.primer_alo
					  FROM base AS bs
					  LEFT JOIN consa AS a ON a.deudor_id = bs.deudor_id					
					  LEFT JOIN consb AS b ON b.deudor_id = bs.deudor_id
					  LEFT JOIN consc AS c ON c.deudor_id = bs.deudor_id
					  LEFT JOIN consd AS d ON d.deudor_id = bs.deudor_id
					  LEFT JOIN conse AS e ON e.deudor_id = bs.deudor_id
					  LEFT JOIN bi_snap.management_indicators AS i ON i.indicator_desc = trim(a.indicador)
					  GROUP BY bs.deudor_id,a.mes,a.anio,a.indicador,a.repeticion, 
							a.llamadas,a.sms,a.correos,a.gescall,a.whatsapp,a.no_contacto,a.fecha_gestion,
							a.visitas, a.phone, a.asesor, a.fecha_primer_gestion, a.fecha_ultima_gestion, 
					  		a.ultimo_alo,b.indicador,c.indicador,d.indicador,e.indicador,i.contactability,primer_alo),
basetelpos AS (SELECT ROW_NUMBER () OVER (PARTITION BY tpf.deudor_id 
										  ORDER BY tpf.fec_ultima_marcacion DESC , tpf.marcaciones DESC ,tpf.deudor_id DESC ,tpf.telefono DESC) AS contador,
			   tpf.deudor_id,tpf.fec_ultima_marcacion,tpf.telefono,tpf.marcaciones 
			   FROM cbpo_popular.telefonos_positivos AS tpf 
			   WHERE deudor_id != '' 
			   ORDER BY tpf.deudor_id,contador),
telefonospositivos AS (SELECT deudor_id AS deudor_id,fec_ultima_marcacion,telefono FROM basetelpos WHERE contador = 1),
basecompromisos AS (SELECT ROW_NUMBER () OVER (PARTITION BY c.deudor_id 
											   ORDER BY c.fecha_compromiso DESC , c.fecha_pago DESC ,c.valor DESC ,c.asesor DESC) AS contador,	
						c.deudor_id AS deudor,
						c.valor,
						c.fecha_compromiso,
						c.fecha_pago,
						c.asesor,
						u.obligacion_id
					FROM cbpo_popular.compromisos AS c
					INNER JOIN cbpo_popular.unicos AS u ON u.deudor_id = c.deudor_id
					WHERE fecha_compromiso >= (SELECT fecha_apertura FROM cbpo_popular.asignaciones WHERE estado IS TRUE )),
compromisos AS (SELECT * 
				FROM basecompromisos 
				WHERE contador = 1),
ciclo AS (SELECT obligacion_id ,min(fecha_registro ) AS fechamin
			   FROM cbpo_popular.cons_asignacion WHERE asignacion_id = (SELECT DISTINCT asignacion_id FROM cbpo_popular.asignaciones WHERE estado = TRUE)
			   AND fecha_registro >= (SELECT DISTINCT fecha_apertura FROM cbpo_popular.asignaciones WHERE estado = TRUE)
			   GROUP BY obligacion_id ),
cicloinicio AS (SELECT DISTINCT a.saldo_capital,c.obligacion_id, a.dia_de_corte,a.dias_en_mora_inicial::NUMERIC ,CASE WHEN dias_en_mora_inicial::NUMERIC = 0 THEN '0'
																											WHEN dias_en_mora_inicial::NUMERIC >= 1 AND dias_en_mora_inicial::NUMERIC <= 30 THEN '1 A 30'
																											WHEN dias_en_mora_inicial::NUMERIC >= 31 AND dias_en_mora_inicial::NUMERIC <= 60 THEN '31 A 60'
																											WHEN dias_en_mora_inicial::NUMERIC >= 61 AND dias_en_mora_inicial::NUMERIC <= 90 THEN '61 A 90'
																											WHEN dias_en_mora_inicial::NUMERIC >= 91 AND dias_en_mora_inicial::NUMERIC <= 120 THEN '91 A 120'
																											WHEN dias_en_mora_inicial::NUMERIC >= 121 AND dias_en_mora_inicial::NUMERIC <= 150 THEN '121 A 150'
																											WHEN dias_en_mora_inicial::NUMERIC >= 151 AND dias_en_mora_inicial::NUMERIC <= 180 THEN '151 A 180'
																											WHEN dias_en_mora_inicial::NUMERIC >= 181 AND dias_en_mora_inicial::NUMERIC <= 360 THEN '181 A 360'
																											WHEN dias_en_mora_inicial::NUMERIC > 360 THEN '> 360'
																										END AS rango_mora_inicial
FROM ciclo AS c INNER JOIN cbpo_popular.cons_asignacion AS a ON a.obligacion_id = c.obligacion_id AND c.fechamin = a.fecha_registro),
sumapagos AS (SELECT DISTINCT obligacion_id,sum(pago_valor ) AS valor FROM cbpo_popular.pagos AS p WHERE pago_fecha >= (SELECT fecha_apertura FROM cbpo_popular.asignaciones WHERE estado = TRUE )  GROUP BY obligacion_id),
cuentapagos AS (SELECT DISTINCT obligacion_id ,count(obligacion_id) AS cantidad_pagos FROM cbpo_popular.pagos AS p WHERE pago_fecha >= (SELECT fecha_apertura FROM cbpo_popular.asignaciones WHERE estado = TRUE )  GROUP BY obligacion_id),
actual AS (SELECT DISTINCT obligacion_id,
						   dias_en_mora_inicial::NUMERIC ,CASE  WHEN dias_en_mora_inicial::NUMERIC = 0 THEN '0'
																WHEN dias_en_mora_inicial::NUMERIC >= 1 AND dias_en_mora_inicial::NUMERIC <= 30 THEN '1 A 30'
																WHEN dias_en_mora_inicial::NUMERIC >= 31 AND dias_en_mora_inicial::NUMERIC <= 60 THEN '31 A 60'
																WHEN dias_en_mora_inicial::NUMERIC >= 61 AND dias_en_mora_inicial::NUMERIC <= 90 THEN '61 A 90'
																WHEN dias_en_mora_inicial::NUMERIC >= 91 AND dias_en_mora_inicial::NUMERIC <= 120 THEN '91 A 120'
																WHEN dias_en_mora_inicial::NUMERIC >= 121 AND dias_en_mora_inicial::NUMERIC <= 150 THEN '121 A 150'
																WHEN dias_en_mora_inicial::NUMERIC >= 181 AND dias_en_mora_inicial::NUMERIC <= 360 THEN '181 A 360'
																WHEN dias_en_mora_inicial::NUMERIC > 360 THEN '> 360'
														  END AS rango_mora_final
FROM cbpo_popular.cons_asignacion WHERE fecha_registro = (SELECT max(fecha_registro ) FROM cbpo_popular.cons_asignacion WHERE asignacion_id = (SELECT asignacion_id FROM cbpo_popular.asignaciones WHERE estado = TRUE))
AND asignacion_id = (SELECT DISTINCT asignacion_id FROM cbpo_popular.asignaciones WHERE estado = TRUE)),
sumapareto AS (SELECT deudor_id,sum(REPLACE(valor_en_mora,',','.')::NUMERIC ) AS saldo_pareto
				FROM cbpo_popular.cons_asignacion 
				WHERE fecha_registro = (SELECT max(fecha_registro ) FROM cbpo_popular.cons_asignacion WHERE asignacion_id = (SELECT asignacion_id FROM cbpo_popular.asignaciones WHERE estado = TRUE))
				AND asignacion_id = (SELECT DISTINCT asignacion_id FROM cbpo_popular.asignaciones WHERE estado = TRUE)  GROUP BY deudor_id),
totalpareto AS (SELECT deudor_id,ROUND(sum(REPLACE(saldo_capital,',','.')::NUMERIC )) AS total_pareto
					FROM cbpo_popular.cons_asignacion 
					WHERE fecha_registro = (SELECT max(fecha_registro ) FROM cbpo_popular.cons_asignacion WHERE asignacion_id = (SELECT asignacion_id FROM cbpo_popular.asignaciones WHERE estado = TRUE))
					AND asignacion_id = (SELECT DISTINCT asignacion_id FROM cbpo_popular.asignaciones WHERE estado = TRUE)  GROUP BY deudor_id),			
baseretiros AS (SELECT obligacion_id,min(fecha_registro) AS fecha_retiro
				FROM cbpo_popular.cons_asignacion
				WHERE fecha_registro >= (SELECT DISTINCT fecha_apertura FROM cbpo_popular.asignaciones WHERE estado = TRUE)
				AND asignacion_id = (SELECT DISTINCT asignacion_id FROM cbpo_popular.asignaciones WHERE estado = TRUE)
				AND estado = 'Retirado'
				GROUP BY obligacion_id),
baseantiguos AS (SELECT DISTINCT obligacion_id FROM cbpo_popular.cons_asignacion WHERE fecha_registro < (SELECT DISTINCT fecha_apertura FROM cbpo_popular.asignaciones WHERE estado = TRUE)),
fecret AS (SELECT DISTINCT obligacion_id,MAX(fecha_registro) AS fecha_retiro_casa
			FROM cbpo_popular.cons_asignacion 
			WHERE fecha_registro < (SELECT max(fecha_registro ) FROM cbpo_popular.cons_asignacion WHERE asignacion_id = (SELECT asignacion_id FROM cbpo_popular.asignaciones WHERE estado = TRUE))
			AND asignacion_id = (SELECT DISTINCT asignacion_id FROM cbpo_popular.asignaciones WHERE estado = TRUE)
			AND casa_actual = 'COBRANDO'
			GROUP BY obligacion_id)
SELECT DISTINCT 
	CASE 
		WHEN ca.entidad = 'TDCEXPRES' AND ca.dias_en_mora_inicial::NUMERIC > 60 THEN 'Avanzada'
		WHEN ca.entidad = 'TDCEXPRES' AND ca.dias_en_mora_inicial::NUMERIC <= 60 THEN 'Vigente'
		WHEN ca.entidad = 'MASIVOS' THEN 'Tradicional' 
	END AS tipo_bpo,
	ca.obligacion_id AS llave,
	ca.entidad,
	u.unico::TEXT,
	cop.nombre::TEXT AS nombre_prod,
    cop.lin_descripcion::TEXT , 
	concat('1',ca.deudor_id)::TEXT AS deudor_id,
	concat(ca.primer_nombre ,' ',ca.segundo_nombre ,' ',ca.primer_apellido ,' ',ca.segundo_apellido) AS nombre_cliente,
	t.tipo_cliente,
	ca.estado_actual_cartera,
	regexp_replace(ca.numero_obligacion, '[^0-9]', '', 'g') AS obligacion_id,
	ca.fecha_de_proceso::date AS inicio_corte,
	ca.fecha_desembolso::date  AS fecha_desembolso,
	ci.dia_de_corte::NUMERIC AS ciclo,
	ca.dias_en_mora_inicial::NUMERIC ,
	ca.dias_mora_actual::NUMERIC AS dias_en_mora_final,
	'$ '||cpm.valor AS valor_compromiso,
    CASE WHEN cpm.fecha_compromiso = '1900-01-01' THEN NULL ELSE cpm.fecha_compromiso END::date AS fecha_creacion_compromiso,
	cpm.fecha_pago AS fecha_pago_compromiso,
	cpm.asesor AS asesor_compromiso,	
	'$ '||sp.valor AS pagos_acumulados,
	cp.cantidad_pagos::TEXT ,
	ci.rango_mora_inicial,
	a.rango_mora_final,
	CASE WHEN ci.rango_mora_inicial = a.rango_mora_final THEN 'Mantenido'
         WHEN ci.rango_mora_inicial < a.rango_mora_final THEN 'Devuelto'
	     WHEN a.rango_mora_final = '0' THEN 'Normalizado'
	     WHEN ci.rango_mora_inicial > a.rango_mora_final THEN 'Caido'
	END AS estado,
	'$ '||ROUND(REPLACE(ca.valor_en_mora,',','.')::NUMERIC) AS valmora,
	'$ '||ROUND(p.saldo_pareto) AS valmora_pareto,
	'$ '||ROUND(REPLACE(ci.saldo_capital,',','.')::NUMERIC) AS capital_inicial,
	'$ '||stp.total_pareto AS  saltotalpareto,
	'$ '||ROUND(REPLACE(ca.pago_minimo,',','.')::NUMERIC) AS pago_minimo,
	NULL AS rango_saltotal,
	ca.estado AS asignacion_inicial,
	ca.wasisfinal AS wasis_banco,
	CASE WHEN ca.estado = 'Retirado' THEN br.fecha_retiro ELSE NULL END AS fecha_de_retiro,
	CASE WHEN ba.obligacion_id IS NULL THEN 'Nuevo' ELSE 'Antiguo' END AS tipo_cliente,
    mg.ind_m4,
	mg.ind_m3,
    mg.ind_m2,
	mg.ind_m1,
	mg.indicador AS ind_mejor_gestion, 
	mg.fecha_gestion AS fec_mejor_gestion,  
	mg.phone::TEXT AS tel_mejor_gestion, 
	mg.asesor AS asesor_mejor_gestion,
    CASE 
    	WHEN mg.indicador IS NULL THEN 'NO CONTACTO' 
    	WHEN trim(mg.indicador) = 'MENSAJE' THEN 'CONTACTO INDIRECTO' ELSE mg.contactability
    END AS contactability, 
    md.indicador AS ind_mejor_gestion_hoy,
    md.asesor AS asesor_mejor_gestion_hoy,
	mg.fecha_primer_gestion, 
	mg.fecha_ultima_gestion, 	
	mg.repeticion::TEXT , 
	mg.llamadas::TEXT , 
	mg.sms::TEXT , 
	mg.correos::TEXT , 
	mg.gescall::TEXT , 
	mg.whatsapp::TEXT ,
	mg.visitas::TEXT ,
	mg.no_contacto::TEXT ,
	mg.total_gestiones::TEXT , 
	mg.primer_alo::date,
    mg.ultimo_alo::date,
    tlp.fec_ultima_marcacion AS fec_ult_marc_tel_pos,
    tlp.telefono::TEXT  AS tel_positivo,
    ca.casa_inicial, 
    ca.casa_actual,
    fr.fecha_retiro_casa
FROM cbpo_popular.cons_asignacion AS ca
LEFT join fecret AS fr ON fr.obligacion_id = ca.obligacion_id 
LEFT JOIN cbpo_popular.tipo_cliente AS t ON t.deudor_id = ca.deudor_id
LEFT JOIN cicloinicio AS ci ON ci.obligacion_id = ca.obligacion_id
LEFT JOIN sumapagos AS sp ON sp.obligacion_id = ca.obligacion_id
LEFT JOIN actual AS a ON a.obligacion_id = ca.obligacion_id
LEFT JOIN sumapareto AS p ON p.deudor_id = ca.deudor_id 
LEFT JOIN baseretiros AS br ON br.obligacion_id = ca.obligacion_id
LEFT JOIN baseantiguos AS ba ON ba.obligacion_id = ca.obligacion_id
LEFT JOIN totalpareto AS stp ON  stp.deudor_id = ca.deudor_id
LEFT JOIN basemejorgestion AS mg ON mg.deudor_id = ca.deudor_id
LEFT JOIN cbpo_popular.mejor_gestion_dia AS md ON  md.deudor_id = ca.deudor_id
LEFT JOIN telefonospositivos AS tlp ON tlp.deudor_id = ca.deudor_id
LEFT JOIN cuentapagos AS cp ON cp.obligacion_id = ca.obligacion_id
LEFT JOIN compromisos AS cpm ON cpm.obligacion_id = ca.obligacion_id
LEFT JOIN cbpo_popular.unicos AS u ON u.obligacion_id = ca.obligacion_id
LEFT JOIN cbpo_popular.codificacion_productos AS cop ON cop.lin_linea_credito = ca.producto 
WHERE ca.fecha_registro = (SELECT DISTINCT fecha_apertura FROM cbpo_popular.asignaciones WHERE estado = TRUE)
AND ca.asignacion_id = (SELECT DISTINCT asignacion_id FROM cbpo_popular.asignaciones WHERE estado = TRUE);
