WITH base AS (
SELECT
	DISTINCT oa.obligacion_id,
	o.deudor_id,
	ROW_NUMBER () OVER (
ORDER BY
	o.deudor_id) AS rownumber
FROM
	cbpo_colpatria.obligaciones_asignacion AS oa
INNER JOIN cbpo_colpatria.obligaciones AS o ON
	o.obligacion_id = oa.obligacion_id
WHERE
	asignacion_id = (
	SELECT
		asignacion_id
	FROM
		cbpo_colpatria.asignaciones
	WHERE
		estado IS TRUE)
ORDER BY
	o.deudor_id),
minrow AS (
--- Registro de primera aparicion de la identificacion
SELECT
	deudor_id,
	MIN(rownumber) AS minrownumber
FROM
	base
GROUP BY
	deudor_id),
unicos AS (
--- Se marca con 1 la primer aparicion de la identificacion, las demas se marcan con el 0
SELECT
	b.obligacion_id,
	b.deudor_id,
	b.rownumber,
	CASE WHEN u.minrownumber IS NULL THEN 0
	ELSE 1 END AS unico
FROM
	base AS b
LEFT JOIN minrow AS u ON
	u.deudor_id = b.deudor_id
	AND u.minrownumber = b.rownumber),
tipocliente AS (
--- Se realiza conteo de productos por identificacion y se determian el tipo de cliente 'MONO/MULTI'
SELECT
	deudor_id,
	CASE WHEN COUNT(deudor_id) = 1 THEN 'MONO'
	ELSE 'MULTI' END AS tipo_cliente
FROM
	base
GROUP BY
	deudor_id),
inimora AS (
--- Se calcula el dia de mora inicial por obligacion 
SELECT
	f.obligacion_id,
	b.deudor_id,
	MIN(f.fecha_registro) AS minfecha
FROM
	cbpo_colpatria.cons_asignacion AS f
INNER JOIN base AS b ON
	b.obligacion_id = f.obligacion_id
WHERE
	f.asignacion_id = (
	SELECT
		asignacion_id
	FROM
		cbpo_colpatria.asignaciones
	WHERE
		estado IS TRUE)
GROUP BY
	f.obligacion_id,
	b.deudor_id),
finmora AS (
--- Se calcula el dia de mora actual por obligacion
SELECT
	f.obligacion_id,
	b.deudor_id,
	MAX(f.fecha_registro) AS maxfecha
FROM
	cbpo_colpatria.cons_asignacion AS f
INNER JOIN base AS b ON
	b.obligacion_id = f.obligacion_id
WHERE
	f.asignacion_id = (
	SELECT
		asignacion_id
	FROM
		cbpo_colpatria.asignaciones
	WHERE
		estado IS TRUE)
GROUP BY
	f.obligacion_id,
	b.deudor_id),
rangomorainicial AS (
--- Se calcula el rango de mora inicial basado en los dias de mora inicial
SELECT
	df.obligacion_id,
	df.campo8::INT8 AS dias_mora,
	SUBSTRING(df.campo13, 1, STRPOS(df.campo13, '.')-1)::INT8 AS saldo_capital,
	SUBSTRING(df.campo14, 1, STRPOS(df.campo14, '.')-1)::INT8 AS saldo_mora,
	CASE WHEN campo8::INT8 = 0 THEN '0'
	WHEN campo8::INT8 > 0
	AND campo8::INT8 <= 30 THEN '30'
	WHEN campo8::INT8 >= 31
	AND campo8::INT8 <= 60 THEN '60'
	WHEN campo8::INT8 >= 61
	AND campo8::INT8 <= 90 THEN '90'
	WHEN campo8::INT8 >= 91
	AND campo8::INT8 <= 120 THEN '120'
	WHEN campo8::INT8 >= 121
	AND campo8::INT8 <= 150 THEN '150'
	WHEN campo8::INT8 >= 151
	AND campo8::INT8 <= 180 THEN '180'
	WHEN campo8::INT8 >= 181
	AND campo8::INT8 <= 210 THEN '210'
	WHEN campo8::INT8 >= 211 THEN '> 210' END AS rango_mora_inicial
FROM
	cbpo_colpatria.cons_asignacion AS df
INNER JOIN inimora AS i ON
	i.obligacion_id = df.obligacion_id
	AND i.minfecha = df.fecha_registro
WHERE
	df.asignacion_id = (
	SELECT
		asignacion_id
	FROM
		cbpo_colpatria.asignaciones
	WHERE
		estado IS TRUE) ),
rangomorafinal AS (
--- Se calcula el rango de mora actual basado en los dias de mora actual
SELECT
	df.obligacion_id,
	df.campo8::INT8 AS dias_mora,
	SUBSTRING(df.campo13, 1, STRPOS(df.campo13, '.')-1)::INT8 AS saldo_capital,
	SUBSTRING(df.campo14, 1, STRPOS(df.campo14, '.')-1)::INT8 AS saldo_mora,
	CASE WHEN campo8::INT8 = 0 THEN '0'
	WHEN campo8::INT8 > 0
	AND campo8::INT8 <= 30 THEN '30'
	WHEN campo8::INT8 >= 31
	AND campo8::INT8 <= 60 THEN '60'
	WHEN campo8::INT8 >= 61
	AND campo8::INT8 <= 90 THEN '90'
	WHEN campo8::INT8 >= 91
	AND campo8::INT8 <= 120 THEN '120'
	WHEN campo8::INT8 >= 121
	AND campo8::INT8 <= 150 THEN '150'
	WHEN campo8::INT8 >= 151
	AND campo8::INT8 <= 180 THEN '180'
	WHEN campo8::INT8 >= 181
	AND campo8::INT8 <= 210 THEN '210'
	WHEN campo8::INT8 >= 211 THEN '> 210' END AS rango_mora_final
FROM
	cbpo_colpatria.cons_asignacion AS df
INNER JOIN finmora AS f ON
	f.obligacion_id = df.obligacion_id
	AND f.maxfecha = df.fecha_registro
WHERE
	df.asignacion_id = (
	SELECT
		asignacion_id
	FROM
		cbpo_colpatria.asignaciones
	WHERE
		estado IS TRUE)),
rangocliente AS (
--- Se genera el rango del cliente basado el los datos del calculo de rango inicial y rango actual
SELECT
	ri.dias_mora AS dias_mora_inicial,
	rf.dias_mora AS dias_mora_actual,
	ri.obligacion_id,
	ri.rango_mora_inicial,
	rf.rango_mora_final,
	ri.rango_mora_inicial || ' - ' || rf.rango_mora_final AS rango
FROM
	rangomorainicial AS ri
INNER JOIN rangomorafinal AS rf ON
	rf.obligacion_id = ri.obligacion_id),
saldovencinicial AS (
--- Se obtiene el saldo vencido inicial
SELECT
	f.obligacion_id,
	SUBSTRING(f.campo14, 1, STRPOS(f.campo14, '.')-1)::INT8 AS saldo_venc_inicial,
	SUBSTRING(f.campo12, 1, STRPOS(f.campo12, '.')-1)::INT8 AS saldo_deuda,
	SUBSTRING(f.campo13, 1, STRPOS(f.campo13, '.')-1)::INT8 AS saldo_capital
FROM
	cbpo_colpatria.cons_asignacion AS f
INNER JOIN inimora AS i ON
	i.obligacion_id = f.obligacion_id
	AND i.minfecha = f.fecha_registro
WHERE
	f.asignacion_id = (
	SELECT
		asignacion_id
	FROM
		cbpo_colpatria.asignaciones
	WHERE
		estado IS TRUE)),
saldovencactual AS (
--- Se obtiene el saldo vencido actual
SELECT
	f.obligacion_id,
	SUBSTRING(f.campo14, 1, STRPOS(f.campo14, '.')-1)::INT8 AS saldo_venc_actual,
	SUBSTRING(f.campo12, 1, STRPOS(f.campo12, '.')-1)::INT8 AS saldo_deuda,
	SUBSTRING(f.campo13, 1, STRPOS(f.campo13, '.')-1)::INT8 AS saldo_capital
FROM
	cbpo_colpatria.cons_asignacion AS f
INNER JOIN finmora AS i ON
	i.obligacion_id = f.obligacion_id
	AND i.maxfecha = f.fecha_registro
WHERE
	f.asignacion_id = (
	SELECT
		asignacion_id
	FROM
		cbpo_colpatria.asignaciones
	WHERE
		estado IS TRUE)),
sumapareto AS (
SELECT
	i.deudor_id,
	SUM(SUBSTRING(f.campo13, 1, STRPOS(f.campo13, '.')-1)::INT8) AS sumpareto
FROM
	cbpo_colpatria.cons_asignacion AS f
INNER JOIN inimora AS i ON
	i.obligacion_id = f.obligacion_id
	AND i.minfecha = f.fecha_registro
WHERE
	f.asignacion_id = (
	SELECT
		asignacion_id
	FROM
		cbpo_colpatria.asignaciones
	WHERE
		estado IS TRUE)
GROUP BY
	i.deudor_id),
totalpagos AS (
--- Se realiza sumatoria de pagos >= a la fecha inicio de la asignacion
SELECT
	p.obligacion_id ,
	SUM(p.pago_valor) AS total_pagos
FROM
	cbpo_colpatria.pagos AS p
INNER JOIN base AS b ON
	b.obligacion_id = p.obligacion_id
WHERE
	p.pago_fecha >= (
	SELECT
		a.fecha_apertura
	FROM
		cbpo_colpatria.asignaciones AS a
	WHERE
		a.estado IS TRUE)
GROUP BY
	p.obligacion_id),
ultimopagofec AS (
SELECT
	p.obligacion_id,
	MAX(p.pago_fecha) AS maxpagofec
FROM
	cbpo_colpatria.pagos AS p
INNER JOIN base AS b ON
	b.obligacion_id = p.obligacion_id
WHERE
	p.pago_fecha >= (
	SELECT
		a.fecha_apertura
	FROM
		cbpo_colpatria.asignaciones AS a
	WHERE
		a.estado IS TRUE)
GROUP BY
	p.obligacion_id ),
maxconsasg AS (
SELECT
	obligacion_id,
	MAX(fecha_registro) AS maxfec
FROM
	cbpo_colpatria.cons_asignacion
GROUP BY
	obligacion_id),
baseasignacion AS (
SELECT
	c.estado,
	c.fecha_registro,
	c.asignacion_id,
	c.campo1,
	c.obligacion_id,
	c.campo3,
	c.deudor_id,
	c.campo5,
	c.campo6,
	c.campo7,
	c.campo8,
	c.campo9,
	c.campo10,
	c.campo11,
	c.campo12,
	c.campo13,
	c.campo14,
	c.campo15,
	c.campo16,
	c.campo17,
	c.campo18,
	c.campo19,
	c.campo20,
	c.campo21,
	c.campo22,
	c.campo23,
	c.campo24,
	c.campo25,
	c.campo26,
	c.campo27,
	c.campo28,
	c.campo29,
	c.campo30,
	c.campo31,
	c.campo32,
	c.campo33,
	c.campo34,
	c.campo35
FROM
	cbpo_colpatria.cons_asignacion AS c
INNER JOIN maxconsasg AS m ON
	m.obligacion_id = c.obligacion_id
	AND m.maxfec = c.fecha_registro ),
mgactual AS (
SELECT
	mg.*,
	i.contactability
FROM
	cbpo_colpatria.mejor_gestion AS mg
INNER JOIN bi_snap.management_indicators AS i ON
	i.indicator_desc = RTRIM(LTRIM(mg.indicador))
WHERE
	anio = (
	SELECT
		EXTRACT (YEAR
	FROM
		a.fecha_apertura)
	FROM
		cbpo_colpatria.asignaciones AS a
	WHERE
		a.estado IS TRUE)
	AND mes = (
	SELECT
		EXTRACT (MONTH
	FROM
		a.fecha_apertura)
	FROM
		cbpo_colpatria.asignaciones AS a
	WHERE
		a.estado IS TRUE) ),
mg_1 AS (
SELECT
	*
FROM
	cbpo_colpatria.mejor_gestion AS mg
WHERE
	anio = (
	SELECT
		EXTRACT (YEAR
	FROM
		a.fecha_apertura)
	FROM
		cbpo_colpatria.asignaciones AS a
	WHERE
		a.estado IS TRUE)
	AND mes = (
	SELECT
		EXTRACT (MONTH
	FROM
		a.fecha_apertura)-1
	FROM
		cbpo_colpatria.asignaciones AS a
	WHERE
		a.estado IS TRUE) ),
mg_2 AS (
SELECT
	*
FROM
	cbpo_colpatria.mejor_gestion AS mg
WHERE
	anio = (
	SELECT
		EXTRACT (YEAR
	FROM
		a.fecha_apertura)
	FROM
		cbpo_colpatria.asignaciones AS a
	WHERE
		a.estado IS TRUE)
	AND mes = (
	SELECT
		EXTRACT (MONTH
	FROM
		a.fecha_apertura)-2
	FROM
		cbpo_colpatria.asignaciones AS a
	WHERE
		a.estado IS TRUE)) ,
mg_3 AS (
SELECT
	*
FROM
	cbpo_colpatria.mejor_gestion AS mg
WHERE
	anio = (
	SELECT
		EXTRACT (YEAR
	FROM
		a.fecha_apertura)
	FROM
		cbpo_colpatria.asignaciones AS a
	WHERE
		a.estado IS TRUE)
	AND mes = (
	SELECT
		EXTRACT (MONTH
	FROM
		a.fecha_apertura)-3
	FROM
		cbpo_colpatria.asignaciones AS a
	WHERE
		a.estado IS TRUE)) ,
mg_4 AS (
SELECT
	*
FROM
	cbpo_colpatria.mejor_gestion AS mg
WHERE
	anio = (
	SELECT
		EXTRACT (YEAR
	FROM
		a.fecha_apertura)
	FROM
		cbpo_colpatria.asignaciones AS a
	WHERE
		a.estado IS TRUE)
	AND mes = (
	SELECT
		EXTRACT (MONTH
	FROM
		a.fecha_apertura)-4
	FROM
		cbpo_colpatria.asignaciones AS a
	WHERE
		a.estado IS TRUE) ),
telposbase AS (
SELECT
	tp.deudor_id,
	MAX(fec_ultima_marcacion) AS fec
FROM
	cbpo_colpatria.telefonos_positivos AS tp
INNER JOIN base AS b ON
	b.deudor_id = tp.deudor_id
GROUP BY
	tp.deudor_id),
telposmaxmarc AS (
SELECT
	tb.deudor_id,
	MAX(tp.marcaciones) AS maxmarc,
	tp.fec_ultima_marcacion
FROM
	telposbase AS tb
INNER JOIN cbpo_colpatria.telefonos_positivos AS tp ON
	tp.deudor_id = tb.deudor_id
	AND tp.fec_ultima_marcacion = tb.fec
GROUP BY
	tb.deudor_id,
	tp.fec_ultima_marcacion),
telpos AS (
SELECT
	tp.deudor_id,
	tp.fec_ultima_marcacion,
	tp.marcaciones,
	tp.telefono
FROM
	telposmaxmarc AS t
INNER JOIN cbpo_colpatria.telefonos_positivos AS tp ON
	tp.fec_ultima_marcacion = t.fec_ultima_marcacion
	AND tp.deudor_id = t.deudor_id
	AND tp.marcaciones = t.maxmarc),
basecomp AS (
SELECT
	obligacion_id,
	fecha_pago,
	fecha_compromiso,
	valor,
	asesor
FROM
	cbpo_colpatria.compromisos
WHERE
	fecha_compromiso >= (
	SELECT
		fecha_apertura
	FROM
		cbpo_colpatria.asignaciones
	WHERE
		estado IS TRUE)),
conteocomp AS (
SELECT
	obligacion_id,
	COUNT(obligacion_id) AS contcomp
FROM
	basecomp
GROUP BY
	obligacion_id),
maxfecpago AS (
SELECT
	obligacion_id,
	MAX(fecha_pago) AS maxfecpag
FROM
	basecomp
GROUP BY
	obligacion_id),
maxfeccompromiso AS (
SELECT
	mfp.obligacion_id,
	mfp.maxfecpag,
	MAX(b.fecha_compromiso) AS maxfeccomp
FROM
	maxfecpago AS mfp
INNER JOIN basecomp AS b ON
	b.obligacion_id = mfp.obligacion_id
	AND b.fecha_pago = mfp.maxfecpag
GROUP BY
	mfp.obligacion_id,
	mfp.maxfecpag),
basecompromisos AS (
SELECT
	m.obligacion_id,
	m.maxfecpag,
	m.maxfeccomp,
	b.valor,
	b.asesor,
	c.contcomp
FROM
	maxfeccompromiso AS m
INNER JOIN basecomp AS b ON
	b.obligacion_id = m.obligacion_id
	AND b.fecha_pago = m.maxfecpag
	AND b.fecha_compromiso = m.maxfeccomp
INNER JOIN conteocomp AS c ON
	c.obligacion_id = m.obligacion_id )
SELECT
	DISTINCT b.rownumber,
	b.obligacion_id,
	b.deudor_id,
	u.unico,
	a.estado,
	t.tipo_cliente,
	a.campo3 AS nombre,
	a.campo1 AS producto,
	CASE WHEN r.dias_mora_actual = 0 THEN '0 (0 DPD)'
	WHEN r.dias_mora_actual > 0
	AND r.dias_mora_actual <= 30 THEN '1 (1 To 30 DPD)'
	WHEN r.dias_mora_actual > 30
	AND r.dias_mora_actual <= 60 THEN '2 (31 To 60 DPD)'
	WHEN r.dias_mora_actual > 60
	AND r.dias_mora_actual <= 90 THEN '3 (61 To 90 DPD)'
	WHEN r.dias_mora_actual > 90
	AND r.dias_mora_actual <= 120 THEN '4 (91 To 120 DPD)'
	WHEN r.dias_mora_actual > 120
	AND r.dias_mora_actual <= 150 THEN '5 (121 To 150 DPD)'
	WHEN r.dias_mora_actual > 150
	AND r.dias_mora_actual <= 180 THEN '6 (151 To 180 DPD)'
	WHEN r.dias_mora_actual > 180 THEN '6+(Greater than 180 DPD)' END AS initial_bucket,
	a.campo5 AS ciudad,
	a.campo6 AS sucursal,
	a.campo7 AS tipo_prod,
	r.dias_mora_inicial,
	r.dias_mora_actual,
	r.rango_mora_inicial,
	r.rango_mora_final,
	r.rango,
	'$ ' || sp.sumpareto AS suma_pareto,
	CASE WHEN a.campo1 = '2'
	AND si.saldo_capital >= 100000000 THEN '1. > A 100 MM'
	WHEN a.campo1 = '2'
	AND si.saldo_capital >= 50000000
	AND si.saldo_capital < 100000000 THEN '2. DE 50 MM A 100 MM'
	WHEN a.campo1 = '2'
	AND si.saldo_capital >= 20000000
	AND si.saldo_capital < 50000000 THEN '3. DE 20 MM A 50 MM'
	WHEN a.campo1 = '2'
	AND si.saldo_capital >= 10000000
	AND si.saldo_capital < 20000000 THEN '4. DE 10 MM A 20 MM'
	WHEN a.campo1 = '2'
	AND si.saldo_capital >= 5000000
	AND si.saldo_capital < 10000000 THEN '5. DE 5 MM A 10 MM'
	WHEN a.campo1 = '2'
	AND si.saldo_capital >= 2000000
	AND si.saldo_capital < 5000000 THEN '6. DE 2 MM A 5 MM'
	WHEN a.campo1 = '2'
	AND si.saldo_capital >= 1000000
	AND si.saldo_capital < 2000000 THEN '7. DE 1 MM A 2 MM'
	WHEN a.campo1 = '2'
	AND si.saldo_capital < 1000000 THEN '8. > 1 MM'
	WHEN a.campo1 = '6'
	AND si.saldo_capital >= 50000000 THEN '1. > 50 MM'
	WHEN a.campo1 = '6'
	AND si.saldo_capital >= 20000000
	AND si.saldo_capital < 50000000 THEN '2. DE 20 MM A 50 MM'
	WHEN a.campo1 = '6'
	AND si.saldo_capital >= 10000000
	AND si.saldo_capital < 20000000 THEN '3. DE 10 MM A 20 MM'
	WHEN a.campo1 = '6'
	AND si.saldo_capital >= 5000000
	AND si.saldo_capital < 10000000 THEN '4. DE 5 MM A 10 MM'
	WHEN a.campo1 = '6'
	AND si.saldo_capital >= 3000000
	AND si.saldo_capital < 5000000 THEN '5. DE 3 MM A 5 MM'
	WHEN a.campo1 = '6'
	AND si.saldo_capital >= 2000000
	AND si.saldo_capital < 3000000 THEN '6. DE 2 MM A 3 MM'
	WHEN a.campo1 = '6'
	AND si.saldo_capital >= 1500000
	AND si.saldo_capital < 2000000 THEN '7. DE 1.5 MM A 2 MM'
	WHEN a.campo1 = '6'
	AND si.saldo_capital >= 1000000
	AND si.saldo_capital < 1500000 THEN '8. DE 1 MM A 1.5 MM'
	WHEN a.campo1 = '6'
	AND si.saldo_capital >= 500000
	AND si.saldo_capital < 1000000 THEN '9. DE 500 M A 1 MM'
	WHEN a.campo1 = '6'
	AND si.saldo_capital < 500000 THEN '10. < 500 M' END AS rango_pareto,
	a.campo9 AS fcast,
	TO_CHAR(CASE WHEN length(a.campo10) < 8 THEN NULL ELSE TO_DATE(a.campo10, 'YYYYMMDD') END, 'DD/MM/YYYY') AS fdesem,
	'$ ' || SUBSTRING(a.campo11, 1, STRPOS(a.campo11, '.')-1)::INT8 AS vrdesem,
	'$ ' || si.saldo_deuda AS saldo_total_inicial,
	'$ ' || sa.saldo_deuda AS saldo_total_actual,
	'$ ' || si.saldo_capital AS saldo_capital_inicial,
	'$ ' || sa.saldo_capital AS saldo_capital_actual,
	'$ ' || si.saldo_venc_inicial AS saldo_vencido_inicial,
	'$ ' || sa.saldo_venc_actual AS saldo_vencido_actual,
	'$ ' || SUBSTRING(a.campo15, 1, STRPOS(a.campo15, '.')-1)::INT8 AS pagomin,
	TO_CHAR(CASE WHEN length(a.campo16) < 8 THEN NULL ELSE TO_DATE(a.campo16, 'YYYYMMDD') END, 'DD/MM/YYYY') AS fultpago,
	'$ ' || SUBSTRING(a.campo17, 1, STRPOS(a.campo17, '.')-1)::INT8 AS VRULTPAGO,
	a.campo18 AS agencia,
	REPLACE(substring(a.campo19,strpos(a.campo19,'.')-2,length(a.campo19)-strpos(a.campo19,'.')),'.',',') AS TASAINTER, 
	TO_CHAR(CASE WHEN length(a.campo32) < 8 THEN NULL ELSE TO_DATE(a.campo32, 'YYYYMMDD') END, 'DD/MM/YYYY') AS FEULTREF,
	TO_CHAR(CASE WHEN length(a.campo33) < 8 THEN NULL ELSE TO_DATE(a.campo33, 'YYYYMMDD') END, 'DD/MM/YYYY') AS ULTCOND,
	TO_CHAR(CASE WHEN length(a.campo34) < 8 THEN NULL ELSE TO_DATE(a.campo34, 'YYYYMMDD') END, 'DD/MM/YYYY') AS FASIGNA,
	a.campo35 AS EQASICAMPANA,
	'' AS diferencia_pago,
	'$ ' || p.total_pagos AS pago_preliminar,
	NULL AS pago_cliente,
	'' AS MIN,
	NULL AS tarifa,
	'' AS honorarios,
	m4.indicador AS perfil_mes_4,
	m3.indicador AS perfil_mes_3,
	m2.indicador AS perfil_mes_2,
	m1.indicador AS perfil_mes_1,
	m.fecha_primer_gestion,
	m.fecha_ultima_gestion,
	m.indicador AS perfil_mes_actual,
	CASE WHEN m.contactability = 0 THEN 'No contacto'
	ELSE 'Contacto' END contactabilidad,
	m.ultimo_alo,
	m.descod1,
	m.descod2,
	m.asesor,
	m.fecha_gestion,
	m.phone AS telefono_mejor_gestion,
	md.indicador AS mejorgestionhoy,
	CASE WHEN m.repeticion IS NULL THEN 0
	ELSE m.repeticion END ,
	CASE WHEN m.llamadas IS NULL THEN 0
	ELSE m.llamadas END ,
	CASE WHEN m.sms IS NULL THEN 0
	ELSE m.sms END ,
	CASE WHEN m.correos IS NULL THEN 0
	ELSE m.correos END ,
	CASE WHEN m.gescall IS NULL THEN 0
	ELSE m.gescall END ,
	CASE WHEN m.visitas IS NULL THEN 0
	ELSE m.visitas END ,
	CASE WHEN m.whatsapp IS NULL THEN 0
	ELSE m.whatsapp END ,
	CASE WHEN m.no_contacto IS NULL THEN 0
	ELSE m.no_contacto END ,
	(CASE WHEN m.llamadas IS NULL THEN 0
	ELSE m.llamadas END +
	CASE WHEN m.sms IS NULL THEN 0
	ELSE m.sms END +
	CASE WHEN m.correos IS NULL THEN 0
	ELSE m.correos END +
	CASE WHEN m.gescall IS NULL THEN 0
	ELSE m.gescall END +
	CASE WHEN m.visitas IS NULL THEN 0
	ELSE m.visitas END +
	CASE WHEN m.whatsapp IS NULL THEN 0
	ELSE m.whatsapp END +
	CASE WHEN m.no_contacto IS NULL THEN 0
	ELSE m.no_contacto END ) AS total_gestiones,
	tp.telefono AS telefono_positivo,
	tp.marcaciones AS marcaciones_telefono_positivo,
	TO_CHAR(tp.fec_ultima_marcacion, 'DD/MM/YYYY') AS ultima_marcacion_telefono_positivo,
	TO_CHAR(bc.maxfeccomp, 'DD/MM/YYYY') AS fec_creacion_ult_compromiso,
	TO_CHAR(bc.maxfecpag, 'DD/MM/YYYY') AS fec_pactada_ult_compromiso,
	bc.valor AS valor_acordado_ult_compromiso,
	bc.asesor AS asesor_ult_compromiso,
	bc.contcomp AS cantidad_acuerdos_mes,
	CASE WHEN up.maxpagofec IS NOT NULL
	AND up.maxpagofec >= bc.maxfeccomp THEN 'Cumplido'
	WHEN up.maxpagofec IS NOT NULL
	AND up.maxpagofec >= m.fecha_primer_gestion THEN 'Pago con gestion'
	WHEN up.maxpagofec IS NOT NULL
	AND up.maxpagofec < m.fecha_primer_gestion THEN 'Pago sin gestion'
	WHEN up.maxpagofec IS NULL
	AND CURRENT_DATE + 1 = bc.maxfecpag THEN 'Falta 1 dia'
	WHEN up.maxpagofec IS NULL
	AND CURRENT_DATE + 2 = bc.maxfecpag THEN 'Falta 2 dias'
	WHEN up.maxpagofec IS NULL
	AND CURRENT_DATE = bc.maxfecpag THEN 'Debe pagar hoy'
	WHEN up.maxpagofec IS NULL
	AND CURRENT_DATE > bc.maxfecpag THEN 'Incumplido'
	WHEN up.maxpagofec IS NULL
	AND CURRENT_DATE <= bc.maxfecpag THEN 'Vigente'
	WHEN bc.maxfecpag IS NULL THEN 'Sin acuerdo' END AS estado_acuerdo
FROM
	base AS b
INNER JOIN unicos AS u ON
	u.obligacion_id = b.obligacion_id
INNER JOIN tipocliente AS t ON
	t.deudor_id = b.deudor_id
INNER JOIN rangocliente AS r ON
	r.obligacion_id = b.obligacion_id
INNER JOIN saldovencinicial AS si ON
	si.obligacion_id = b.obligacion_id
INNER JOIN saldovencactual AS sa ON
	sa.obligacion_id = b.obligacion_id
INNER JOIN sumapareto AS sp ON
	sp.deudor_id = b.deudor_id
LEFT JOIN totalpagos AS p ON
	p.obligacion_id = b.obligacion_id
LEFT JOIN baseasignacion AS a ON
	a.obligacion_id = b.obligacion_id
LEFT JOIN mgactual AS m ON
	m.deudor_id = b.deudor_id
LEFT JOIN mg_1 AS m1 ON
	m1.deudor_id = b.deudor_id
LEFT JOIN mg_2 AS m2 ON
	m2.deudor_id = b.deudor_id
LEFT JOIN mg_3 AS m3 ON
	m3.deudor_id = b.deudor_id
LEFT JOIN mg_4 AS m4 ON
	m4.deudor_id = b.deudor_id
LEFT JOIN telpos AS tp ON
	tp.deudor_id = b.deudor_id
LEFT JOIN cbpo_colpatria.mejor_gestion_dia AS md ON
	md.deudor_id = b.deudor_id
LEFT JOIN basecompromisos AS bc ON
	bc.obligacion_id = b.obligacion_id
LEFT JOIN ultimopagofec AS up ON
	up.obligacion_id = b.obligacion_id;
