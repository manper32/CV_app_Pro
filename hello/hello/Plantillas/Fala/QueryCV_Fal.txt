WITH base AS (SELECT DISTINCT o.deudor_id 
			  FROM cbpo_falabella.obligaciones_asignacion AS oa 
			  INNER JOIN cbpo_falabella.obligaciones AS o 
			  ON o.obligacion_id = oa.obligacion_id
			  WHERE oa.asignacion_id = (SELECT a.asignacion_id 
			  						    FROM cbpo_falabella.asignaciones AS a 
			  						    WHERE a.estado IS TRUE)),
consa AS (SELECT m.* 
		  FROM cbpo_falabella.mejor_gestion AS m 
		  LEFT JOIN base AS b 
		  ON b.deudor_id = m.deudor_id 
		  WHERE mes = EXTRACT (MONTH FROM current_date )),
consb AS (SELECT m.deudor_id,indicador 
	      FROM cbpo_falabella.mejor_gestion AS m 
	      LEFT JOIN base AS b 
	      ON b.deudor_id = m.deudor_id 
	      WHERE mes = EXTRACT (MONTH FROM current_date ) -1),
consc AS (SELECT m.deudor_id,indicador 
          FROM cbpo_falabella.mejor_gestion AS m 
          LEFT JOIN base AS b ON b.deudor_id = m.deudor_id 
          WHERE mes = EXTRACT (MONTH FROM current_date ) -2),
consd AS (SELECT m.deudor_id,indicador 
		  FROM cbpo_falabella.mejor_gestion AS m 
		  LEFT JOIN base AS b ON b.deudor_id = m.deudor_id 
		  WHERE mes = EXTRACT (MONTH FROM current_date ) -3),
conse AS (SELECT m.deudor_id,indicador 
	      FROM cbpo_falabella.mejor_gestion AS m 
	      LEFT JOIN base AS b ON b.deudor_id = m.deudor_id 
	      WHERE mes = EXTRACT (MONTH FROM current_date ) -4),
basemejorgestion AS (SELECT DISTINCT bs.deudor_id,
							a.mes, 
							a.anio, 
							a.indicador, 
							a.repeticion, 
							a.llamadas, 
							a.sms, 
							a.correos, 
							a.gescall, 
					  		a.whatsapp,
					  		a.no_contacto,
					  		CASE WHEN a.llamadas IS NULL THEN 0 ELSE a.llamadas END +
					  		CASE WHEN a.sms IS NULL THEN 0 ELSE a.sms END +
					  		CASE WHEN a.correos IS NULL THEN 0 ELSE a.correos END +
					  		CASE WHEN a.gescall IS NULL THEN  0 ELSE a.gescall END +
					  		CASE WHEN a.whatsapp IS NULL THEN 0 ELSE a.whatsapp END +
					  		CASE WHEN a.no_contacto IS NULL THEN  0 ELSE a.no_contacto END AS total_gestiones, 
					  		a.fecha_gestion, a.visitas, a.phone, a.asesor, a.fecha_primer_gestion, a.fecha_ultima_gestion, 
					  a.ultimo_alo,b.indicador AS ind_m1,c.indicador AS ind_m2,d.indicador AS ind_m3,e.indicador AS ind_m4,i.contactability 
					  FROM base AS bs
					  LEFT JOIN consa	AS a ON a.deudor_id = bs.deudor_id					
					  LEFT JOIN consb AS b ON b.deudor_id = bs.deudor_id
					  LEFT JOIN consc AS c ON c.deudor_id = bs.deudor_id
					  LEFT JOIN consd AS d ON d.deudor_id = bs.deudor_id
					  LEFT JOIN conse AS e ON e.deudor_id = bs.deudor_id
					  LEFT JOIN bi_snap.management_indicators AS i ON i.indicator_desc = trim(a.indicador)
					  GROUP BY bs.deudor_id,a.mes,a.anio,a.indicador,a.repeticion, 
							a.llamadas,a.sms,a.correos,a.gescall,a.whatsapp,a.no_contacto,a.fecha_gestion,
							a.visitas, a.phone, a.asesor, a.fecha_primer_gestion, a.fecha_ultima_gestion, 
					  		a.ultimo_alo,b.indicador,c.indicador,d.indicador,e.indicador,i.contactability),
basetelpos AS (SELECT ROW_NUMBER () OVER (PARTITION BY tpf.deudor_id 
										  ORDER BY tpf.fec_ultima_marcacion DESC , tpf.marcaciones DESC ,tpf.deudor_id DESC ,tpf.telefono DESC) AS contador,
			   tpf.deudor_id,tpf.fec_ultima_marcacion,tpf.telefono,tpf.marcaciones 
			   FROM cbpo_falabella.telefonos_positivos AS tpf 
			   WHERE deudor_id != '' 
			   ORDER BY tpf.deudor_id,contador),
telefonospositivos AS (SELECT deudor_id,fec_ultima_marcacion,telefono FROM basetelpos WHERE contador = 1),
basecompromisos AS (SELECT ROW_NUMBER () OVER (PARTITION BY obligacion_id 
											   ORDER BY fecha_compromiso DESC , fecha_pago DESC ,valor DESC ,asesor DESC) AS contador,	
						obligacion_id,
						valor,
						fecha_compromiso,
						fecha_pago,asesor 
					FROM cbpo_falabella.compromisos 
					WHERE obligacion_id != ''
					AND fecha_compromiso >= (SELECT fecha_apertura FROM cbpo_falabella.asignaciones WHERE estado =  TRUE)),
compromisos AS (SELECT * 
				FROM basecompromisos 
				WHERE contador = 1),
pagos AS (SELECT obligacion_id,sum(pago_valor) AS valor_pago ,max(pago_fecha) AS fecha_pago 
		  FROM cbpo_falabella.pagos
		  WHERE pago_fecha >= (SELECT fecha_apertura FROM cbpo_falabella.asignaciones WHERE estado =  TRUE)
		  GROUP BY obligacion_id),
sumasaldot AS (SELECT deudor_id,SUM(ROUND(REPLACE(saldo_total,',','.')::NUMERIC)) AS saldopareto 
			   FROM cbpo_falabella.cons_asignacion 
			   WHERE fecha_registro = (SELECT max(fecha_registro) 
			   						   FROM cbpo_falabella.cons_asignacion) 
			   						   GROUP BY deudor_id),
sumaparetocart AS (SELECT grupo,rango,SUM(ROUND(REPLACE(saldo_total,',','.')::NUMERIC)) AS sumaparetocartera 
			       FROM cbpo_falabella.cons_asignacion 
			       WHERE fecha_registro = (SELECT max(fecha_registro) 
			                               FROM cbpo_falabella.cons_asignacion) 
			                               GROUP BY grupo,rango),
unicopro AS (SELECT DISTINCT deudor_id,obligacion_id,
			CASE WHEN grupo::NUMERIC = 3 THEN 'Consumo'
			     WHEN grupo::NUMERIC = 5 THEN 'Tarjeta'
			     WHEN grupo::NUMERIC = 6 THEN 'Sobregiro'
			END || ' '|| upper(RIGHT(rango,length(rango)-(strpos(rango,')') +1))) AS cartera,
		     ROW_NUMBER () OVER (PARTITION BY deudor_id,CASE WHEN grupo::NUMERIC = 3 THEN 'Consumo'
																					     WHEN grupo::NUMERIC = 5 THEN 'Tarjeta'
																					     WHEN grupo::NUMERIC = 6 THEN 'Sobregiro'
																					END || ' '|| upper(RIGHT(rango,length(rango)-(strpos(rango,')') +1))) 
																		ORDER BY deudor_id DESC,CASE WHEN grupo::NUMERIC = 3 THEN 'Consumo'
																								     WHEN grupo::NUMERIC = 5 THEN 'Tarjeta'
																								     WHEN grupo::NUMERIC = 6 THEN 'Sobregiro'
																								END || ' '|| upper(RIGHT(rango,length(rango)-(strpos(rango,')') +1)))) AS cont_up 
			 FROM cbpo_falabella.cons_asignacion WHERE fecha_registro = (SELECT max(fecha_registro) 
			 															 FROM cbpo_falabella.cons_asignacion)					 
			 															 ORDER BY deudor_id),
maxfectreest AS (SELECT DISTINCT cuenta,max(periodo) AS maxrest 
			     FROM cbpo_falabella.reestructuraciones 
				 WHERE periodo >= ((SELECT max(periodo) 
				 					FROM cbpo_falabella.reestructuraciones) - 5)
				 GROUP BY cuenta),
sumacuotas AS (SELECT DISTINCT 
	obligacion_id,vencto,
	CASE WHEN ROUND(REPLACE(cuota_vcda1,',','.')::NUMERIC) IS NULL THEN 0 ELSE ROUND(REPLACE(cuota_vcda1,',','.')::NUMERIC) END
	+ CASE WHEN ROUND(REPLACE(cuota_vcda2,',','.')::NUMERIC) IS NULL THEN 0 ELSE ROUND(REPLACE(cuota_vcda2,',','.')::NUMERIC) END
	+ CASE WHEN ROUND(REPLACE(cuota_vcda3,',','.')::NUMERIC) IS NULL THEN 0 ELSE ROUND(REPLACE(cuota_vcda3,',','.')::NUMERIC) END
	+ CASE WHEN ROUND(REPLACE(cuota_vcda4,',','.')::NUMERIC) IS NULL THEN 0 ELSE ROUND(REPLACE(cuota_vcda4,',','.')::NUMERIC) END
	+ CASE WHEN ROUND(REPLACE(cuota_vcda5,',','.')::NUMERIC) IS NULL THEN 0 ELSE ROUND(REPLACE(cuota_vcda5,',','.')::NUMERIC) END
	+ CASE WHEN ROUND(REPLACE(cuota_vcda6,',','.')::NUMERIC) IS NULL THEN 0 ELSE ROUND(REPLACE(cuota_vcda6,',','.')::NUMERIC) END
	+ CASE WHEN ROUND(REPLACE(cuota_vcda7,',','.')::NUMERIC) IS NULL THEN 0 ELSE ROUND(REPLACE(cuota_vcda7,',','.')::NUMERIC) END
	+ CASE WHEN ROUND(REPLACE(cuota_vcda8,',','.')::NUMERIC) IS NULL THEN 0 ELSE ROUND(REPLACE(cuota_vcda8,',','.')::NUMERIC) END
	+ CASE WHEN ROUND(REPLACE(cuota_vcda9,',','.')::NUMERIC) IS NULL THEN 0 ELSE ROUND(REPLACE(cuota_vcda9,',','.')::NUMERIC) END
	+ CASE WHEN ROUND(REPLACE(cuota_vcda10,',','.')::NUMERIC) IS NULL THEN 0 ELSE ROUND(REPLACE(cuota_vcda10,',','.')::NUMERIC) END
	+ CASE WHEN ROUND(REPLACE(cuota_vcda11,',','.')::NUMERIC) IS NULL THEN 0 ELSE ROUND(REPLACE(cuota_vcda11,',','.')::NUMERIC) END
	+ CASE WHEN EXTRACT (MONTH FROM CASE WHEN fecha_venc12 = '0,00' OR fecha_venc12 IS NULL THEN NULL ELSE fecha_venc12::DATE END) = EXTRACT (MONTH FROM current_date)  
	       THEN 0 ELSE ROUND(REPLACE(cuota_vcda12,',','.')::NUMERIC) 
	  END AS totalcuotas
	FROM cbpo_falabella.cons_asignacion
	WHERE asignacion_id = (SELECT asignacion_id FROM cbpo_falabella.asignaciones WHERE estado IS TRUE)
	AND fecha_registro = (SELECT max(fecha_registro) FROM cbpo_falabella.cons_asignacion)
	AND unidad_nombre = 'Prejuridico'
	GROUP BY obligacion_id,fecha_registro,vencto,cuota_vcda1,cuota_vcda2,cuota_vcda3,cuota_vcda4,cuota_vcda5,cuota_vcda6,
cuota_vcda7,cuota_vcda8,cuota_vcda9,cuota_vcda10,cuota_vcda11,cuota_vcda12,fecha_venc12
ORDER BY obligacion_id,vencto)---- aqui			 
SELECT DISTINCT 
ca.tipo_producto_asignacion,
ca.grupo,
CASE WHEN ca.grupo::NUMERIC = 3 THEN 'CONSUMO'
     WHEN ca.grupo::NUMERIC = 5 THEN 'TARJETA'
     WHEN ca.grupo::NUMERIC = 6 THEN 'SOBREJIRO'
END || ' '|| upper(RIGHT(ca.rango,length(ca.rango)-(strpos(ca.rango,')') +1))) AS cartera,
t.tipo_cliente,
u.unico::TEXT ,
CASE WHEN up.cont_up != 1 THEN '0' ELSE '1' END AS unico_pro,
ca.obligacion_id,
ca.deudor_id,
ca.nombre,
CASE WHEN ca.grupo::NUMERIC = 3 THEN 'CONSUMO'
     WHEN ca.grupo::NUMERIC = 5 THEN 'TARJETA'
     WHEN ca.grupo::NUMERIC = 6 THEN 'SOBREJIRO'
END AS producto, 
'$ ' || ROUND(REPLACE(ca.saldo_total,',','.')::NUMERIC) AS saldototal,
'$ ' || s.saldopareto AS saldo_pareto,
'' AS segmentacion,
REPLACE (ROUND(ROUND(REPLACE(ca.saldo_total,',','.')::NUMERIC) / sp.sumaparetocartera,4) * 100||' %','.',',') AS peso,
ca.dias_mora_asignacion::NUMERIC + (current_date - (SELECT DISTINCT min(fecha_registro) 
													FROM cbpo_falabella.cons_asignacion 
													WHERE asignacion_id = (SELECT asignacion_id 
																		   FROM cbpo_falabella.asignaciones 
																		   WHERE estado IS TRUE ))) AS alturamora_hoy,
'(0'||substring(ca.rango,2,2)::NUMERIC - 1||')'||' '||RIGHT(ca.rango,length(ca.rango)-(strpos(ca.rango,')') +1)) AS rango,																		   
ROUND(ca.dias_mora_asignacion::NUMERIC)  AS dias_mora,
ca.vencto,
CASE WHEN mg.indicador IS NULL THEN 'SIN GESTION' ELSE mg.indicador END AS mejor_gestion,
mg.total_gestiones::TEXT ,
mg.fecha_ultima_gestion,
mg.asesor AS asesor_mejor_gestion,
cp.fecha_compromiso,
cp.fecha_pago AS fecha_pago_compromiso,
'$ ' ||cp.valor AS valor_compromiso,
CASE 
	WHEN cp.fecha_pago IS NULL AND p.valor_pago IS NULL THEN 'Sin acuerdo'
	WHEN cp.fecha_pago IS NULL AND p.valor_pago IS NOT NULL AND p.valor_pago > 0 THEN 'Pago sin compromiso' 
	WHEN cp.fecha_pago IS NOT NULL AND p.fecha_pago IS NULL AND current_date + 2 = cp.fecha_pago THEN 'Falta 2 dias'
	WHEN cp.fecha_pago IS NOT NULL AND p.fecha_pago IS NULL AND current_date + 1 = cp.fecha_pago THEN 'Falta 1 dia'
	WHEN cp.fecha_pago IS NOT NULL AND p.fecha_pago IS NULL AND current_date = cp.fecha_pago THEN 'Debe pagar hoy'
	WHEN cp.fecha_pago IS NOT NULL AND p.fecha_pago IS NULL AND current_date <= cp.fecha_pago THEN 'Vigente'
	WHEN cp.fecha_pago IS NOT NULL AND p.fecha_pago IS NULL AND current_date BETWEEN cp.fecha_pago + 1 AND cp.fecha_pago + 2  THEN 'Pendiente'
	WHEN cp.fecha_pago IS NOT NULL AND p.valor_pago >= sc.totalcuotas THEN 'Cumplido'
	WHEN cp.fecha_pago IS NOT NULL AND p.valor_pago < sc.totalcuotas THEN 'Pago parcial'
	WHEN cp.fecha_pago IS NOT NULL AND p.valor_pago IS NULL THEN 'Incumplido' 
END AS estado_acuerdo,
pa.dias_mora::NUMERIC AS dias_mora_pagos,
'$ ' || p.valor_pago AS valor_pago,
p.fecha_pago,
NULL AS pagos_reales,
'$ ' || CASE WHEN CASE WHEN pa.dias_mora IS NULL OR pa.dias_mora::NUMERIC > ca.dias_mora_asignacion::NUMERIC THEN 'DETERIORO'
	   		           WHEN pa.dias_mora = 0 THEN 'NORMALIZADO'
			           WHEN pa.dias_mora::NUMERIC <= ca.dias_mora_asignacion::NUMERIC THEN 'RETENIDO'
			      END  = 'NORMALIZADO' AND p.valor_pago >= sc.totalcuotas THEN sc.totalcuotas
             WHEN CASE WHEN pa.dias_mora IS NULL OR pa.dias_mora::NUMERIC > ca.dias_mora_asignacion::NUMERIC THEN 'DETERIORO'
		   		        WHEN pa.dias_mora = 0 THEN 'NORMALIZADO'
				        WHEN pa.dias_mora::NUMERIC <= ca.dias_mora_asignacion::NUMERIC THEN 'RETENIDO'
				  END  = 'NORMALIZADO' AND p.valor_pago < sc.totalcuotas THEN p.valor_pago
			 WHEN CASE WHEN pa.dias_mora IS NULL OR pa.dias_mora::NUMERIC > ca.dias_mora_asignacion::NUMERIC THEN 'DETERIORO'
   		               WHEN pa.dias_mora = 0 THEN 'NORMALIZADO'
		               WHEN pa.dias_mora::NUMERIC <= ca.dias_mora_asignacion::NUMERIC THEN 'RETENIDO'
		  		  END  != 'DETERIORO' THEN 	p.valor_pago	  
END AS pago_para_honorarios,
'$ ' || CASE WHEN CASE WHEN pa.dias_mora IS NULL OR pa.dias_mora::NUMERIC > ca.dias_mora_asignacion::NUMERIC THEN 'DETERIORO'
	   		           WHEN pa.dias_mora = 0 THEN 'NORMALIZADO'
			           WHEN pa.dias_mora::NUMERIC <= ca.dias_mora_asignacion::NUMERIC THEN 'RETENIDO'
			      END  = 'NORMALIZADO' AND p.valor_pago >= sc.totalcuotas THEN sc.totalcuotas - ((sc.totalcuotas * gc.porcentaje_gasto) / 100)
             WHEN CASE WHEN pa.dias_mora IS NULL OR pa.dias_mora::NUMERIC > ca.dias_mora_asignacion::NUMERIC THEN 'DETERIORO'
		   		        WHEN pa.dias_mora = 0 THEN 'NORMALIZADO'
				        WHEN pa.dias_mora::NUMERIC <= ca.dias_mora_asignacion::NUMERIC THEN 'RETENIDO'
				  END  = 'NORMALIZADO' AND p.valor_pago < sc.totalcuotas THEN p.valor_pago - ((p.valor_pago * gc.porcentaje_gasto) / 100)
			 WHEN CASE WHEN pa.dias_mora IS NULL OR pa.dias_mora::NUMERIC > ca.dias_mora_asignacion::NUMERIC THEN 'DETERIORO'
   		               WHEN pa.dias_mora = 0 THEN 'NORMALIZADO'
		               WHEN pa.dias_mora::NUMERIC <= ca.dias_mora_asignacion::NUMERIC THEN 'RETENIDO'
		  		  END  != 'DETERIORO' THEN 	ROUND(p.valor_pago - ((p.valor_pago * gc.porcentaje_gasto) / 100))	  
		END AS pago_para_factura,
'$ '||sc.totalcuotas AS pendiente,
CASE WHEN ROUND(REPLACE(ca.saldo_total,',','.')::NUMERIC) - p.valor_pago <= 0 THEN 'Si' 
ELSE 'No' 
END AS pago_total,
CASE WHEN pa.dias_mora IS NULL OR pa.dias_mora::NUMERIC > ca.dias_mora_asignacion::NUMERIC THEN 'DETERIORO'
     WHEN pa.dias_mora = 0 THEN 'NORMALIZADO'
     WHEN pa.dias_mora::NUMERIC <= ca.dias_mora_asignacion::NUMERIC THEN 'RETENIDO'
END AS nvo_status,
ca.estado_falabella AS status_refresque, 
CASE WHEN pa.dias_mora IS NULL OR pa.dias_mora::NUMERIC > ca.dias_refresque::NUMERIC THEN 'DETERIORO'
     WHEN pa.dias_mora = 0 THEN 'NORMALIZADO'
     WHEN pa.dias_mora::NUMERIC <= ca.dias_refresque::NUMERIC THEN 'RETENIDO'
END AS nvo_status_refresque,
ca.dias_refresque::NUMERIC AS dias_mora_refresque,
'$ '||(ROUND((sc.totalcuotas * gc.porcentaje_gasto) / 100 ) + sc.totalcuotas) AS pendiente_mas_gastos, 
'$ '||(CASE WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC )
     WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC )
     WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
     														   AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC )
     WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
     														   AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) = 0 
     														   AND ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC )
     WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
     														   AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) = 0 
     														   AND ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC ) = 0 
     														   AND ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC )
ELSE ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC )
END +  ROUND((CASE WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC )
		    WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC )
	        WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
	           															 AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC )
	        WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
	           															 AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) = 0 
	           															 AND ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC )
	        WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
	                                                                     AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) = 0 
	                                                                     AND ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC ) = 0 
	                                                                     AND ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC )
		ELSE ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC )
        END * gc.porcentaje_gasto)/ 100)) AS vencida_mas_gastos,
'$ ' || (ROUND((sc.totalcuotas * gc.porcentaje_gasto) / 100 )) AS gastos_mora,
'$ ' || (ROUND((CASE WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC )
		    WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC )
	        WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
	           															 AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC )
	        WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
	           															 AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) = 0 
	           															 AND ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC )
	        WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
	                                                                     AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) = 0 
	                                                                     AND ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC ) = 0 
	                                                                     AND ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC )
		ELSE ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC )
        END * gc.porcentaje_gasto)/ 100)) AS gastos_cv,
gc.porcentaje_gasto||' %' AS porcentaje_gasto,        
'$ ' || (CASE WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC )
	     WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC )
	     WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
	     														   AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC )
	     WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
	                                                               AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) = 0 
	                                                               AND  ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC )
	     WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
	     														   AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) = 0 
	     														   AND  ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC ) = 0 
	     														   AND  ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC )
	ELSE ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC )
END) AS valor_a_mantener_sin_gxc,
'$ ' || (ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC )) AS cv8, 
'$ ' || (ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC )) AS cv9,
'$ ' || (ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC )) AS cv10,
'$ ' || (ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC )) AS cv11,
'$ ' || (ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC )) AS cv12,
'$ '||(CASE WHEN aj.obligacion_id IS NULL THEN res.pago_minimo
	 WHEN aj.obligacion_id IS NOT NULL AND (current_date - aj.fecha_aplicacion) > 180 THEN res.pago_minimo
	 ELSE NULL 
END)||' / '||'$ '||CASE WHEN ca.grupo::NUMERIC = 3 THEN CASE WHEN aj.obligacion_id IS NULL THEN res.cuota60m
								 WHEN aj.obligacion_id IS NOT NULL AND (current_date - aj.fecha_aplicacion) > 180 THEN res.cuota60m
								 ELSE NULL 
							END
	 WHEN ca.grupo::NUMERIC = 5 THEN CASE WHEN aj.obligacion_id IS NULL THEN res.cuota42m
								 WHEN aj.obligacion_id IS NOT NULL AND (current_date - aj.fecha_aplicacion) > 180 THEN res.cuota60m
								 ELSE NULL 
							END
END||' / '||CASE WHEN aj.obligacion_id IS NULL THEN 'Si'
	 WHEN aj.obligacion_id IS NOT NULL AND (current_date - aj.fecha_aplicacion) > 180 THEN 'Si'
	 ELSE 'No'
END AS restructuracion,
'$ ' || (CASE WHEN 
				CASE WHEN aj.obligacion_id IS NULL THEN res.pago_minimo
					 WHEN aj.obligacion_id IS NOT NULL AND (current_date - aj.fecha_aplicacion) > 180 THEN res.pago_minimo
			    ELSE NULL 
				END IS NULL THEN 
			CASE WHEN aj.obligacion_id IS NULL THEN ras.pago_minimo
		     	 WHEN aj.obligacion_id IS NOT NULL AND (current_date - aj.fecha_aplicacion) > 180 THEN ras.pago_minimo
			ELSE NULL 
			END
		ELSE 
			CASE WHEN aj.obligacion_id IS NULL THEN res.pago_minimo
				 WHEN aj.obligacion_id IS NOT NULL AND (current_date - aj.fecha_aplicacion) > 180 THEN res.pago_minimo
			ELSE NULL 
			END
END) AS valor,
'$ ' || (CASE WHEN aj.obligacion_id IS NULL THEN ras.pago_minimo
		 WHEN aj.obligacion_id IS NOT NULL AND (current_date - aj.fecha_aplicacion) > 180 THEN ras.pago_minimo
		 ELSE NULL 
END) AS pagominimo_anterior,
'$ ' || (CASE WHEN aj.obligacion_id IS NULL THEN res.pago_minimo
	 WHEN aj.obligacion_id IS NOT NULL AND (current_date - aj.fecha_aplicacion) > 180 THEN res.pago_minimo
	 ELSE NULL 
END) AS pagominimo_actual,
'$ ' || (CASE WHEN aj.obligacion_id IS NULL THEN res.cuota36m
	 WHEN aj.obligacion_id IS NOT NULL AND (current_date - aj.fecha_aplicacion) > 180 THEN res.cuota36m
	 ELSE NULL 
END) AS cuota36,
'$ ' || (CASE WHEN aj.obligacion_id IS NULL THEN res.cuota42m
	 WHEN aj.obligacion_id IS NOT NULL AND (current_date - aj.fecha_aplicacion) > 180 THEN res.cuota42m
	 ELSE NULL 
END) AS cuota42,
'$ ' || (CASE WHEN aj.obligacion_id IS NULL THEN res.cuota60m
	 WHEN aj.obligacion_id IS NOT NULL AND (current_date - aj.fecha_aplicacion) > 180 THEN res.cuota60m
	 ELSE NULL 
END) AS cuota60,
'$ ' || (CASE WHEN aj.obligacion_id IS NULL THEN res.cuota72m
	 WHEN aj.obligacion_id IS NOT NULL AND (current_date - aj.fecha_aplicacion) > 180 THEN res.cuota72m
	 ELSE NULL 
END ) AS cuota72,
'$ ' || (CASE WHEN ca.grupo::NUMERIC = 3 THEN CASE WHEN aj.obligacion_id IS NULL THEN res.cuota60m
								 WHEN aj.obligacion_id IS NOT NULL AND (current_date - aj.fecha_aplicacion) > 180 THEN res.cuota60m
								 ELSE NULL 
							END
	 WHEN ca.grupo::NUMERIC = 5 THEN CASE WHEN aj.obligacion_id IS NULL THEN res.cuota42m
								 WHEN aj.obligacion_id IS NOT NULL AND (current_date - aj.fecha_aplicacion) > 180 THEN res.cuota60m
								 ELSE NULL 
							END
END) AS proyectada_cargue,
CASE WHEN aj.obligacion_id IS NULL THEN 'Si'
	 WHEN aj.obligacion_id IS NOT NULL AND (current_date - aj.fecha_aplicacion) > 180 THEN 'Si'
	 ELSE 'No'
END AS aplica_ajuste,
CASE WHEN aj.obligacion_id IS NULL THEN res.periodo
	 WHEN aj.obligacion_id IS NOT NULL AND (current_date - aj.fecha_aplicacion) > 180 THEN res.periodo
	 ELSE NULL 
END AS fecha,
'$ ' || ((CASE WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC )
		     WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC )
		     WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
		     														   AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC )
		     WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
		     														   AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) = 0 
		     														   AND  ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC )
		     WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
		     														   AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) = 0 
		     														   AND  ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC ) = 0 
		     														   AND  ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC )
		ELSE ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC )
		END + round((CASE WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC )
			   	              WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC )
		                      WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
		                      															AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC )
		                      WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
		                      															AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) = 0 
		                      															AND  ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC )
		                      WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
		                      															AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) = 0 
		                      															AND  ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC ) = 0 
		                      															AND  ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC )
			             ELSE ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC )
		   				 END * gc.porcentaje_gasto ) / 100)) - p.valor_pago) AS diferencia,
REPLACE(round((CASE WHEN 			
		CASE WHEN ROUND(REPLACE(ca.saldo_total,',','.')::NUMERIC) = 0 THEN 0 ELSE 			
		  ((CASE WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC )
			     WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC )
			     WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
			     														   AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC )
			     WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
			     														   AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) = 0 
			     														   AND  ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC )
			     WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
			     														   AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) = 0 
			     														   AND  ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC ) = 0 
			     														   AND  ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC )
			ELSE ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC )
			END + round((CASE WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC )
			   	              WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC )
		                      WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
		                      															AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC )
		                      WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
		                      															AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) = 0 
		                      															AND  ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC )
		                      WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
		                      															AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) = 0 
		                      															AND  ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC ) = 0 
		                      															AND  ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC )
			             ELSE ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC )
		   				 END * gc.porcentaje_gasto ) / 100)) - p.valor_pago) / ROUND(REPLACE(ca.saldo_total,',','.')::NUMERIC) 
			END <= 0 THEN 0 ELSE 
	CASE WHEN ROUND(REPLACE(ca.saldo_total,',','.')::NUMERIC) = 0 THEN 0 ELSE 			
	  ((CASE WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC )
			     WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC )
			     WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
			     														   AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC )
			     WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
			     														   AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) = 0 
			     														   AND  ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC )
			     WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
			     														   AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) = 0 
			     														   AND  ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC ) = 0 
			     														   AND  ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC )
			ELSE ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC )
			END + round((CASE WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC )
			   	              WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC )
		                      WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
		                      															AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC )
		                      WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
		                      															AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) = 0 
		                      															AND  ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC )
		                      WHEN ROUND(REPLACE(ca.cuota_vcda8,',','.')::NUMERIC ) = 0 AND  ROUND(REPLACE(ca.cuota_vcda9,',','.')::NUMERIC ) = 0 
		                      															AND  ROUND(REPLACE(ca.cuota_vcda10,',','.')::NUMERIC ) = 0 
		                      															AND  ROUND(REPLACE(ca.cuota_vcda11,',','.')::NUMERIC ) = 0 
		                      															AND  ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC ) > 0 THEN ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC )
			             ELSE ROUND(REPLACE(ca.cuota_vcda12,',','.')::NUMERIC )
		   				 END * gc.porcentaje_gasto ) / 100)) - p.valor_pago) / ROUND(REPLACE(ca.saldo_total,',','.')::NUMERIC) 
			END 
END)::NUMERIC,2)||'%','.',',') AS porcentaje_saldo_total,
'' AS x,
'' AS valor,
'' AS porcentaje_participacion,	
mg.ind_m4,
mg.ind_m3,
mg.ind_m2,
mg.ind_m1,
mg.fecha_primer_gestion,
mg.phone::TEXT AS telefono_mejor_gestion,
mg.fecha_gestion,
CASE WHEN mg.contactability IS NULL OR mg.contactability = 0 THEN 'No contacto' 
	WHEN mg.contactability = 1 THEN 'Contacto'
END AS contactabilidad, 
md.indicador AS indicador_hoy, 
mg.repeticion::TEXT ,
mg.llamadas::TEXT ,
mg.sms::TEXT ,
mg.correos::TEXT ,
mg.gescall::TEXT ,
mg.whatsapp::TEXT ,
mg.visitas::TEXT ,
mg.no_contacto::TEXT ,
tp.telefono::TEXT AS telefono_positivo,
tp.fec_ultima_marcacion,
CASE WHEN l.deudor_id IS NULL THEN 'No' 
ELSE 'Si' 
END AS lista_robinson
FROM cbpo_falabella.cons_asignacion AS ca 
LEFT JOIN cbpo_falabella.lista_robinson AS l 
	ON l.deudor_id = ca.deudor_id
LEFT JOIN cbpo_falabella.unicos AS u 
	ON u.obligacion_id = ca.obligacion_id
LEFT JOIN cbpo_falabella.tipo_cliente AS t 
	ON t.deudor_id = ca.deudor_id
INNER JOIN sumasaldot AS s 
	ON s.deudor_id = ca.deudor_id 
INNER JOIN sumaparetocart AS sp 
	ON sp.grupo = ca.grupo 
	AND sp.rango = ca.rango
LEFT JOIN pagos AS p 
	ON p.obligacion_id = ca.obligacion_id
LEFT JOIN cbpo_falabella.pagos AS pa 
	ON pa.obligacion_id = p.obligacion_id 
	AND pa.pago_fecha = p.fecha_pago
INNER JOIN unicopro AS up 
	ON up.obligacion_id = ca.obligacion_id 
LEFT JOIN cbpo_falabella.ajustes AS aj 
	ON aj.obligacion_id = ca.obligacion_id
LEFT JOIN maxfectreest AS r ON r.cuenta = ca.obligacion_id
LEFT JOIN cbpo_falabella.reestructuraciones AS res 
	ON res.cuenta = r.cuenta 
	AND res.periodo = r.maxrest
LEFT JOIN cbpo_falabella.reestructuraciones AS ras 
	ON ras.cuenta = r.cuenta 
	AND ras.periodo = r.maxrest - 5
INNER JOIN sumacuotas AS sc ON sc.obligacion_id = ca.obligacion_id
LEFT JOIN cbpo_falabella.gastos_cobranza AS gc ON ca.dias_mora_asignacion::NUMERIC >= gc.mora_ini 
	AND ca.dias_mora_asignacion::NUMERIC <= gc.mora_fin
LEFT JOIN compromisos AS cp ON cp.obligacion_id = ca.obligacion_id
LEFT JOIN basemejorgestion AS mg ON mg.deudor_id = ca.deudor_id
LEFT JOIN cbpo_falabella.mejor_gestion_dia AS md ON md.deudor_id = ca.deudor_id
LEFT JOIN telefonospositivos AS tp ON tp.deudor_id = ca.deudor_id
WHERE ca.fecha_registro = (SELECT max(fecha_registro) FROM cbpo_falabella.cons_asignacion)
AND ca.asignacion_id = (SELECT asignacion_id FROM cbpo_falabella.asignaciones WHERE estado = TRUE )
AND ca.unidad_nombre = 'Prejuridico'
ORDER BY ca.deudor_id;	


